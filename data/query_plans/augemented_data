SELECT channel, col_name, d_year, d_qoy, i_category, COUNT(*) sales_cnt, SUM(ext_sales_price) sales_amt
FROM (
  SELECT 'store' AS channel, 'ss_hdemo_sk' col_name, d_year, d_qoy, i_category, ss_ext_sales_price ext_sales_price
  FROM store_sales, item, date_dim
  WHERE ss_hdemo_sk IS NULL
  AND ss_sold_date_sk=d_date_sk
  AND ss_item_sk=i_item_sk
  UNION ALL
  SELECT 'web' AS channel, 'ws_ship_mode_sk' col_name, d_year, d_qoy, i_category, ws_ext_sales_price ext_sales_price
  FROM web_sales, item, date_dim
  WHERE ws_ship_mode_sk IS NULL
  AND ws_sold_date_sk=d_date_sk
  AND ws_item_sk=i_item_sk
  UNION ALL
  SELECT 'catalog' AS channel, 'cs_ship_customer_sk' col_name, d_year, d_qoy, i_category, cs_ext_sales_price ext_sales_price
  FROM catalog_sales, item, date_dim
  WHERE cs_ship_customer_sk IS NULL
  AND cs_sold_date_sk=d_date_sk
  AND cs_item_sk=i_item_sk
) foo
GROUP BY channel, col_name, d_year, d_qoy, i_category
ORDER BY channel, col_name, d_year, d_qoy, i_category
LIMIT 200;


SELECT channel, col_name, d_year, d_qoy, d_month, i_category, COUNT(*) sales_cnt, SUM(ext_sales_price) sales_amt
FROM (
  SELECT 'store' AS channel, 'ss_hdemo_sk' col_name, d_year, d_qoy, d_month, i_category, ss_ext_sales_price ext_sales_price
  FROM store_sales, item, date_dim
  WHERE ss_hdemo_sk IS NULL
  AND ss_sold_date_sk=d_date_sk
  AND ss_item_sk=i_item_sk
  UNION ALL
  SELECT 'web' AS channel, 'ws_ship_mode_sk' col_name, d_year, d_qoy, d_month, i_category, ws_ext_sales_price ext_sales_price
  FROM web_sales, item, date_dim
  WHERE ws_ship_mode_sk IS NULL
  AND ws_sold_date_sk=d_date_sk
  AND ws_item_sk=i_item_sk
  UNION ALL
  SELECT 'catalog' AS channel, 'cs_ship_customer_sk' col_name, d_year, d_qoy, d_month, i_category, cs_ext_sales_price ext_sales_price
  FROM catalog_sales, item, date_dim
  WHERE cs_ship_customer_sk IS NULL
  AND cs_sold_date_sk=d_date_sk
  AND cs_item_sk=i_item_sk
) foo
GROUP BY channel, col_name, d_year, d_qoy, d_month, i_category
ORDER BY channel, col_name, d_year, d_qoy, d_month, i_category;


SELECT channel, col_name, d_year, d_qoy, i_category, COUNT(*) sales_cnt, SUM(ext_sales_price) sales_amt
FROM (
  SELECT 'store' AS channel, 'ss_hdemo_sk' col_name, d_year, d_qoy, i_category, ss_ext_sales_price ext_sales_price
  FROM store_sales, item, date_dim
  WHERE ss_hdemo_sk IS NULL AND i_category = 'Electronics'
  AND ss_sold_date_sk=d_date_sk
  AND ss_item_sk=i_item_sk
  UNION ALL
  SELECT 'web' AS channel, 'ws_ship_mode_sk' col_name, d_year, d_qoy, i_category, ws_ext_sales_price ext_sales_price
  FROM web_sales, item, date_dim
  WHERE ws_ship_mode_sk IS NULL AND i_category = 'Electronics'
  AND ws_sold_date_sk=d_date_sk
  AND ws_item_sk=i_item_sk
  UNION ALL
  SELECT 'catalog' AS channel, 'cs_ship_customer_sk' col_name, d_year, d_qoy, i_category, cs_ext_sales_price ext_sales_price
  FROM catalog_sales, item, date_dim
  WHERE cs_ship_customer_sk IS NULL AND i_category = 'Electronics'
  AND cs_sold_date_sk=d_date_sk
  AND cs_item_sk=i_item_sk
) foo
GROUP BY channel, col_name, d_year, d_qoy, i_category
ORDER BY channel, col_name, d_year, d_qoy, i_category;



SELECT channel, col_name, d_year, d_qoy, i_category, COUNT(*) sales_cnt, SUM(ext_sales_price) sales_amt
FROM (
  SELECT 'store' AS channel, 'ss_hdemo_sk' col_name, d_year, d_qoy, i_category, ss_ext_sales_price ext_sales_price
  FROM store_sales, item, date_dim
  WHERE ss_sold_date_sk=d_date_sk
  AND ss_item_sk=i_item_sk
  UNION ALL
  SELECT 'web' AS channel, 'ws_ship_mode_sk' col_name, d_year, d_qoy, i_category, ws_ext_sales_price ext_sales_price
  FROM web_sales, item, date_dim
  WHERE ws_ship_mode_sk IS NULL
  AND ws_sold_date_sk=d_date_sk
  AND ws_item_sk=i_item_sk
  UNION ALL
  SELECT 'catalog' AS channel, 'cs_ship_customer_sk' col_name, d_year, d_qoy, i_category, cs_ext_sales_price ext_sales_price
  FROM catalog_sales, item, date_dim
  WHERE cs_ship_customer_sk IS NULL
  AND cs_sold_date_sk=d_date_sk
  AND cs_item_sk=i_item_sk
) foo
GROUP BY channel, col_name, d_year, d_qoy, i_category
ORDER BY channel, col_name, d_year, d_qoy, i_category;


SELECT channel, col_name, d_year, d_qoy, i_category, COUNT(*) sales_cnt, AVG(ext_sales_price) sales_amt_avg
FROM (
  SELECT 'store' AS channel, 'ss_hdemo_sk' col_name, d_year, d_qoy, i_category, ss_ext_sales_price ext_sales_price
  FROM store_sales, item, date_dim
  WHERE ss_hdemo_sk IS NULL
  AND ss_sold_date_sk=d_date_sk
  AND ss_item_sk=i_item_sk
  UNION ALL
  SELECT 'web' AS channel, 'ws_ship_mode_sk' col_name, d_year, d_qoy, i_category, ws_ext_sales_price ext_sales_price
  FROM web_sales, item, date_dim
  WHERE ws_ship_mode_sk IS NULL
  AND ws_sold_date_sk=d_date_sk
  AND ws_item_sk=i_item_sk
  UNION ALL
  SELECT 'catalog' AS channel, 'cs_ship_customer_sk' col_name, d_year, d_qoy, i_category, cs_ext_sales_price ext_sales_price
  FROM catalog_sales, item, date_dim
  WHERE cs_ship_customer_sk IS NULL
  AND cs_sold_date_sk=d_date_sk
  AND cs_item_sk=i_item_sk
) foo
GROUP BY channel, col_name, d_year, d_qoy, i_category
ORDER BY channel, col_name, d_year, d_qoy, i_category;


SELECT channel, col_name, d_year, d_qoy, i_category, COUNT(*) sales_cnt, SUM(ext_sales_price) sales_amt
FROM (
  SELECT 'store' AS channel, 'ss_hdemo_sk' col_name, d_year, d_qoy, i_category, ss_ext_sales_price ext_sales_price
  FROM store_sales, item, date_dim
  WHERE ss_hdemo_sk IS NULL
  AND ss_sold_date_sk=d_date_sk
  AND ss_item_sk=i_item_sk
  UNION ALL
  SELECT 'web' AS channel, 'ws_ship_mode_sk' col_name, d_year, d_qoy, i_category, ws_ext_sales_price ext_sales_price
  FROM web_sales, item, date_dim
  WHERE ws_ship_mode_sk IS NULL
  AND ws_sold_date_sk=d_date_sk
  AND ws_item_sk=i_item_sk
  UNION ALL
  SELECT 'catalog' AS channel, 'cs_ship_customer_sk' col_name, d_year, d_qoy, i_category, cs_ext_sales_price ext_sales_price
  FROM catalog_sales, item, date_dim
  WHERE cs_ship_customer_sk IS NULL
  AND cs_sold_date_sk=d_date_sk
  AND cs_item_sk=i_item_sk
) foo
GROUP BY channel, col_name, d_year, d_qoy, i_category
HAVING COUNT(*) > 50
ORDER BY channel, col_name, d_year, d_qoy, i_category;

SELECT channel, d_year, COUNT(*) sales_cnt, SUM(ext_sales_price) sales_amt
FROM (
  SELECT 'store' AS channel, d_year, ss_ext_sales_price ext_sales_price
  FROM store_sales, item, date_dim
  WHERE ss_hdemo_sk IS NULL
  AND ss_sold_date_sk=d_date_sk
  AND ss_item_sk=i_item_sk
  UNION ALL
  SELECT 'web' AS channel, d_year, ws_ext_sales_price ext_sales_price
  FROM web_sales, item, date_dim
  WHERE ws_ship_mode_sk IS NULL
  AND ws_sold_date_sk=d_date_sk
  AND ws_item_sk=i_item_sk
  UNION ALL
  SELECT 'catalog' AS channel, d_year, cs_ext_sales_price ext_sales_price
  FROM catalog_sales, item, date_dim
  WHERE cs_ship_customer_sk IS NULL
  AND cs_sold_date_sk=d_date_sk
  AND cs_item_sk=i_item_sk
) foo
GROUP BY channel, d_year
ORDER BY channel, d_year;

SELECT channel, col_name, d_year, d_qoy, i_category, c_customer_id, COUNT(*) sales_cnt, SUM(ext_sales_price) sales_amt
FROM (
  SELECT 'store' AS channel, 'ss_hdemo_sk' col_name, d_year, d_qoy, i_category, ss_ext_sales_price ext_sales_price, ss_customer_sk
  FROM store_sales, item, date_dim, customer
  WHERE ss_hdemo_sk IS NULL
  AND ss_sold_date_sk=d_date_sk
  AND ss_item_sk=i_item_sk
  AND ss_customer_sk=c_customer_sk
  UNION ALL
  SELECT 'web' AS channel, 'ws_ship_mode_sk' col_name, d_year, d_qoy, i_category, ws_ext_sales_price ext_sales_price, ws_bill_customer_sk
  FROM web_sales, item, date_dim, customer
  WHERE ws_ship_mode_sk IS NULL
  AND ws_sold_date_sk=d_date_sk
  AND ws_item_sk=i_item_sk
  AND ws_bill_customer_sk=c_customer_sk
  UNION ALL
  SELECT 'catalog' AS channel, 'cs_ship_customer_sk' col_name, d_year, d_qoy, i_category, cs_ext_sales_price ext_sales_price, cs_bill_customer_sk
  FROM catalog_sales, item, date_dim, customer
  WHERE cs_ship_customer_sk IS NULL
  AND cs_sold_date_sk=d_date_sk
  AND cs_item_sk=i_item_sk
  AND cs_bill_customer_sk=c_customer_sk
) foo
GROUP BY channel, col_name, d_year, d_qoy, i_category, c_customer_id
ORDER BY channel, col_name, d_year, d_qoy, i_category, c_customer_id;


SELECT channel, col_name, d_year, d_qoy, i_category, COUNT(*) sales_cnt, SUM(ext_sales_price) sales_amt
FROM (
  SELECT 'store' AS channel, 'ss_hdemo_sk' col_name, d_year, d_qoy, i_category, ss_ext_sales_price ext_sales_price
  FROM store_sales, item, date_dim
  WHERE ss_hdemo_sk IS NULL
  AND ss_sold_date_sk=d_date_sk
  AND ss_item_sk=i_item_sk
  UNION
  SELECT 'web' AS channel, 'ws_ship_mode_sk' col_name, d_year, d_qoy, i_category, ws_ext_sales_price ext_sales_price
  FROM web_sales, item, date_dim
  WHERE ws_ship_mode_sk IS NULL
  AND ws_sold_date_sk=d_date_sk
  AND ws_item_sk=i_item_sk
  UNION
  SELECT 'catalog' AS channel, 'cs_ship_customer_sk' col_name, d_year, d_qoy, i_category, cs_ext_sales_price ext_sales_price
  FROM catalog_sales, item, date_dim
  WHERE cs_ship_customer_sk IS NULL
  AND cs_sold_date_sk=d_date_sk
  AND cs_item_sk=i_item_sk
) foo
GROUP BY channel, col_name, d_year, d_qoy, i_category
ORDER BY channel, col_name, d_year, d_qoy, i_category;

SELECT channel, col_name, d_year, d_qoy, i_category, COUNT(*) sales_cnt, SUM(ext_sales_price) sales_amt
FROM (
  SELECT 'store' AS channel, 'ss_hdemo_sk' col_name, d_year, d_qoy, i_category, ss_ext_sales_price ext_sales_price
  FROM store_sales, item, date_dim
  WHERE ss_hdemo_sk IS NULL AND d_year = 2020
  AND ss_sold_date_sk=d_date_sk
  AND ss_item_sk=i_item_sk
  UNION ALL
  SELECT 'web' AS channel, 'ws_ship_mode_sk' col_name, d_year, d_qoy, i_category, ws_ext_sales_price ext_sales_price
  FROM web_sales, item, date_dim
  WHERE ws_ship_mode_sk IS NULL AND d_year = 2020
  AND ws_sold_date_sk=d_date_sk
  AND ws_item_sk=i_item_sk
  UNION ALL
  SELECT 'catalog' AS channel, 'cs_ship_customer_sk' col_name, d_year, d_qoy, i_category, cs_ext_sales_price ext_sales_price
  FROM catalog_sales, item, date_dim
  WHERE cs_ship_customer_sk IS NULL AND d_year = 2020
  AND cs_sold_date_sk=d_date_sk
  AND cs_item_sk=i_item_sk
) foo
GROUP BY channel, col_name, d_year, d_qoy, i_category
ORDER BY channel, col_name, d_year, d_qoy, i_category;

SELECT c_last_name, c_first_name, ca_city, bought_city, ss_ticket_number, extended_price, extended_tax, list_price
FROM (
  SELECT ss_ticket_number, ss_customer_sk, ca_city bought_city, sum(ss_ext_sales_price) extended_price, sum(ss_ext_list_price) list_price, sum(ss_ext_tax) extended_tax
  FROM store_sales, date_dim, store, household_demographics, customer_address
  WHERE store_sales.ss_sold_date_sk = date_dim.d_date_sk
    AND store_sales.ss_store_sk = store.s_store_sk
    AND store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
    AND store_sales.ss_addr_sk = customer_address.ca_address_sk
    AND date_dim.d_dom BETWEEN 1 AND 5
    AND (household_demographics.hd_dep_count = 3 OR household_demographics.hd_vehicle_count= 3)
    AND date_dim.d_year IN (2000,2001,2002)
    AND store.s_city IN ('Walnut Grove','Enterprise')
  GROUP BY ss_ticket_number, ss_customer_sk, ss_addr_sk, ca_city
) dn, customer, customer_address current_addr
WHERE ss_customer_sk = c_customer_sk
  AND customer.c_current_addr_sk = current_addr.ca_address_sk
  AND current_addr.ca_city <> bought_city
ORDER BY c_last_name, ss_ticket_number
LIMIT 100;

SELECT c_last_name, c_first_name, ca_city, bought_city, ss_ticket_number, extended_price, extended_tax, list_price, date_dim.d_year
FROM (
  SELECT ss_ticket_number, ss_customer_sk, ca_city bought_city, sum(ss_ext_sales_price) extended_price, sum(ss_ext_list_price) list_price, sum(ss_ext_tax) extended_tax, date_dim.d_year
  FROM store_sales, date_dim, store, household_demographics, customer_address
  WHERE store_sales.ss_sold_date_sk = date_dim.d_date_sk
    AND store_sales.ss_store_sk = store.s_store_sk
    AND store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
    AND store_sales.ss_addr_sk = customer_address.ca_address_sk
    AND date_dim.d_dom BETWEEN 1 AND 2
    AND (household_demographics.hd_dep_count = 3 OR household_demographics.hd_vehicle_count= 3)
    AND date_dim.d_year IN (2000,2001,2002)
    AND store.s_city IN ('Walnut Grove','Enterprise')
  GROUP BY ss_ticket_number, ss_customer_sk, ss_addr_sk, ca_city, date_dim.d_year
) dn, customer, customer_address current_addr
WHERE ss_customer_sk = c_customer_sk
  AND customer.c_current_addr_sk = current_addr.ca_address_sk
  AND current_addr.ca_city <> bought_city
ORDER BY c_last_name, ss_ticket_number, date_dim.d_year
LIMIT 100;


SELECT c_last_name, c_first_name, ca_city, bought_city, ss_ticket_number, extended_price, extended_tax, list_price
FROM (
  SELECT ss_ticket_number, ss_customer_sk, ca_city bought_city, sum(ss_ext_sales_price) extended_price, sum(ss_ext_list_price) list_price, sum(ss_ext_tax) extended_tax
  FROM store_sales, date_dim, store, household_demographics, customer_address
  WHERE store_sales.ss_sold_date_sk = date_dim.d_date_sk
    AND store_sales.ss_store_sk = store.s_store_sk
    AND store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
    AND store_sales.ss_addr_sk = customer_address.ca_address_sk
    AND date_dim.d_dom BETWEEN 1 AND 2
    AND (household_demographics.hd_dep_count = 4 OR household_demographics.hd_vehicle_count= 4)
    AND date_dim.d_year IN (2000,2001,2002)
    AND store.s_city IN ('Walnut Grove','Enterprise')
  GROUP BY ss_ticket_number, ss_customer_sk, ss_addr_sk, ca_city
) dn, customer, customer_address current_addr
WHERE ss_customer_sk = c_customer_sk
  AND customer.c_current_addr_sk = current_addr.ca_address_sk
  AND current_addr.ca_city <> bought_city
ORDER BY c_last_name, ss_ticket_number
LIMIT 100;

SELECT c_last_name, c_first_name, ca_city, bought_city, ss_ticket_number, avg_extended_price, extended_tax, list_price
FROM (
  SELECT ss_ticket_number, ss_customer_sk, ca_city bought_city, avg(ss_ext_sales_price) avg_extended_price, sum(ss_ext_tax) extended_tax, sum(ss_ext_list_price) list_price
  FROM store_sales, date_dim, store, household_demographics, customer_address
  WHERE store_sales.ss_sold_date_sk = date_dim.d_date_sk
    AND store_sales.ss_store_sk = store.s_store_sk
    AND store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
    AND store_sales.ss_addr_sk = customer_address.ca_address_sk
    AND date_dim.d_dom BETWEEN 1 AND 2
    AND (household_demographics.hd_dep_count = 3 OR household_demographics.hd_vehicle_count= 3)
    AND date_dim.d_year IN (2000,2001,2002)
    AND store.s_city IN ('Walnut Grove','Enterprise')
  GROUP BY ss_ticket_number, ss_customer_sk, ss_addr_sk, ca_city
) dn, customer, customer_address current_addr
WHERE ss_customer_sk = c_customer_sk
  AND customer.c_current_addr_sk = current_addr.ca_address_sk
  AND current_addr.ca_city <> bought_city
ORDER BY c_last_name, ss_ticket_number
LIMIT 100;

SELECT c_last_name, c_first_name, ca_city, bought_city, ss_ticket_number, extended_price, extended_tax, list_price
FROM (
  SELECT ss_ticket_number, ss_customer_sk, ca_city bought_city, sum(ss_ext_sales_price) extended_price, sum(ss_ext_list_price) list_price, sum(ss_ext_tax) extended_tax
  FROM store_sales, date_dim, store, household_demographics, customer_address
  WHERE store_sales.ss_sold_date_sk = date_dim.d_date_sk
    AND store_sales.ss_store_sk = store.s_store_sk
    AND store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
    AND store_sales.ss_addr_sk = customer_address.ca_address_sk
    AND date_dim.d_dom BETWEEN 1 AND 2
    AND (household_demographics.hd_dep_count = 3 OR household_demographics.hd_vehicle_count= 3)
    AND date_dim.d_year IN (2000,2001,2002)
    AND store.s_city IN ('Springfield','Shelbyville')
  GROUP BY ss_ticket_number, ss_customer_sk, ss_addr_sk, ca_city
) dn, customer, customer_address current_addr
WHERE ss_customer_sk = c_customer_sk
  AND customer.c_current_addr_sk = current_addr.ca_address_sk
  AND current_addr.ca_city <> bought_city
ORDER BY c_last_name, ss_ticket_number
LIMIT 100;

SELECT c_last_name, c_first_name, ca_city, bought_city, ss_ticket_number, extended_price, extended_tax, list_price
FROM (
  SELECT ss_ticket_number, ss_customer_sk, ca_city bought_city, sum(ss_ext_sales_price) extended_price, sum(ss_ext_list_price) list_price, sum(ss_ext_tax) extended_tax
  FROM store_sales, date_dim, store, household_demographics, customer_address
  WHERE store_sales.ss_sold_date_sk = date_dim.d_date_sk
    AND store_sales.ss_store_sk = store.s_store_sk
    AND store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
    AND store_sales.ss_addr_sk = customer_address.ca_address_sk
    AND date_dim.d_dom BETWEEN 1 AND 2
    AND (household_demographics.hd_dep_count = 3 OR household_demographics.hd_vehicle_count= 3)
    AND date_dim.d_year IN (2000,2001,2002)
    AND store.s_city IN ('Walnut Grove','Enterprise')
  GROUP BY ss_ticket_number, ss_customer_sk, ss_addr_sk, ca_city
) dn, customer, customer_address current_addr
WHERE ss_customer_sk = c_customer_sk
  AND customer.c_current_addr_sk = current_addr.ca_address_sk
  AND current_addr.ca_city <> bought_city
ORDER BY c_last_name, ss_ticket_number
LIMIT 50;

SELECT c_last_name, c_first_name, ca_city, bought_city, ss_ticket_number, extended_price, extended_tax, list_price
FROM (
  SELECT ss_ticket_number, ss_customer_sk, ca_city bought_city, sum(ss_ext_sales_price) extended_price, sum(ss_ext_list_price) list_price, sum(ss_ext_tax) extended_tax
  FROM store_sales, date_dim, store, household_demographics, customer_address
  WHERE store_sales.ss_sold_date_sk = date_dim.d_date_sk
    AND store_sales.ss_store_sk = store.s_store_sk
    AND store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
    AND store_sales.ss_addr_sk = customer_address.ca_address_sk
    AND date_dim.d_dom BETWEEN 1 AND 2
    AND (household_demographics.hd_dep_count = 3 OR household_demographics.hd_vehicle_count= 3)
    AND household_demographics.hd_age BETWEEN 30 AND 40
    AND date_dim.d_year IN (2000,2001,2002)
    AND store.s_city IN ('Walnut Grove','Enterprise')
  GROUP BY ss_ticket_number, ss_customer_sk, ss_addr_sk, ca_city
) dn, customer, customer_address current_addr
WHERE ss_customer_sk = c_customer_sk
  AND customer.c_current_addr_sk = current_addr.ca_address_sk
  AND current_addr.ca_city <> bought_city
ORDER BY c_last_name, ss_ticket_number
LIMIT 100;


SELECT c_last_name, c_first_name, ca_city, bought_city, ss_ticket_number, extended_price, extended_tax, list_price
FROM (
  SELECT ss_ticket_number, ss_customer_sk, ca_city bought_city, sum(ss_ext_sales_price) extended_price, sum(ss_ext_list_price) list_price, sum(ss_ext_tax) extended_tax
  FROM store_sales, date_dim, store, household_demographics, customer_address
  WHERE store_sales.ss_sold_date_sk = date_dim.d_date_sk
    AND store_sales.ss_store_sk = store.s_store_sk
    AND store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
    AND store_sales.ss_addr_sk = customer_address.ca_address_sk
    AND date_dim.d_dom BETWEEN 1 AND 2
    AND (household_demographics.hd_dep_count = 3 OR household_demographics.hd_vehicle_count= 3)
    AND date_dim.d_year IN (2001,2002,2003)  
    AND store.s_city IN ('Walnut Grove','Enterprise')
  GROUP BY ss_ticket_number, ss_customer_sk, ss_addr_sk, ca_city
) dn, customer, customer_address current_addr
WHERE ss_customer_sk = c_customer_sk
  AND customer.c_current_addr_sk = current_addr.ca_address_sk
  AND current_addr.ca_city <> bought_city
ORDER BY c_last_name, ss_ticket_number
LIMIT 100;

SELECT c_last_name, c_first_name, ca_city, bought_city, ss_ticket_number, extended_price, extended_tax, list_price
FROM (
  SELECT ss_ticket_number, ss_customer_sk, ca_city bought_city, sum(ss_ext_sales_price) extended_price, sum(ss_ext_list_price) list_price, sum(ss_ext_tax) extended_tax
  FROM store_sales, date_dim, store, household_demographics, customer_address
  WHERE store_sales.ss_sold_date_sk = date_dim.d_date_sk
    AND store_sales.ss_store_sk = store.s_store_sk
    AND store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
    AND store_sales.ss_addr_sk = customer_address.ca_address_sk
    AND date_dim.d_dom BETWEEN 1 AND 2
    AND (household_demographics.hd_dep_count = 3 OR household_demographics.hd_vehicle_count= 3)
    AND date_dim.d_year IN (2000,2001,2002)
    AND store.s_city IN ('Walnut Grove','Enterprise')
    AND store.s_county = 'Springfield'  
  GROUP BY ss_ticket_number, ss_customer_sk, ss_addr_sk, ca_city
) dn, customer, customer_address current_addr
WHERE ss_customer_sk = c_customer_sk
  AND customer.c_current_addr_sk = current_addr.ca_address_sk
  AND current_addr.ca_city <> bought_city
ORDER BY c_last_name, ss_ticket_number
LIMIT 100;


SELECT c_last_name, c_first_name, ca_city, bought_city, ss_ticket_number, extended_price, extended_tax, list_price
FROM (
  SELECT ss_ticket_number, ss_customer_sk, ca_city bought_city, sum(ss_ext_sales_price) extended_price, sum(ss_ext_list_price) list_price, sum(ss_ext_tax) extended_tax
  FROM store_sales, date_dim, store, household_demographics, customer_address
  WHERE store_sales.ss_sold_date_sk = date_dim.d_date_sk
    AND store_sales.ss_store_sk = store.s_store_sk
    AND store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
    AND store_sales.ss_addr_sk = customer_address.ca_address_sk
    AND date_dim.d_dom BETWEEN 1 AND 2
    AND (household_demographics.hd_dep_count = 3 OR household_demographics.hd_vehicle_count= 3)
    AND date_dim.d_year IN (2000,2001,2002)
    AND store.s_city IN ('Walnut Grove','Enterprise')
    AND store.s_gmt_offset = -8  
  GROUP BY ss_ticket_number, ss_customer_sk, ss_addr_sk, ca_city
) dn, customer, customer_address current_addr
WHERE ss_customer_sk = c_customer_sk
  AND customer.c_current_addr_sk = current_addr.ca_address_sk
  AND current_addr.ca_city <> bought_city
ORDER BY c_last_name, ss_ticket_number
LIMIT 100;

WITH ssales AS (
  SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, SUM(ss_net_paid_inc_tax) netpaid
  FROM store_sales, store_returns, store, item, customer, customer_address
  WHERE ss_ticket_number = sr_ticket_number
    AND ss_item_sk = sr_item_sk
    AND ss_customer_sk = c_customer_sk
    AND ss_item_sk = i_item_sk
    AND ss_store_sk = s_store_sk
    AND c_current_addr_sk = ca_address_sk
    AND c_birth_country <> UPPER(ca_country)
    AND s_zip = ca_zip
    AND s_market_id = 7  
  GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
)
SELECT c_last_name, c_first_name, s_store_name, SUM(netpaid) paid
FROM ssales
WHERE i_color = 'blue'  
GROUP BY c_last_name, c_first_name, s_store_name
HAVING SUM(netpaid) > (SELECT 0.05 * AVG(netpaid) FROM ssales)
ORDER BY c_last_name, c_first_name, s_store_name;

WITH ssales AS (
  SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, SUM(ss_net_paid_inc_tax) netpaid
  FROM store_sales, store_returns, store, item, customer, customer_address
  WHERE ss_ticket_number = sr_ticket_number
    AND ss_item_sk = sr_item_sk
    AND ss_customer_sk = c_customer_sk
    AND ss_item_sk = i_item_sk
    AND ss_store_sk = s_store_sk
    AND c_current_addr_sk = ca_address_sk
    AND c_birth_country <> UPPER(ca_country)
    AND s_zip = ca_zip
    AND s_market_id = 8
  GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
)
SELECT c_last_name, c_first_name, s_store_name, SUM(netpaid) paid
FROM ssales
WHERE i_color = 'lime'
GROUP BY c_last_name, c_first_name, s_store_name
HAVING SUM(netpaid) > (SELECT 0.1 * AVG(netpaid) FROM ssales)  -- Adjusted percentage
ORDER BY c_last_name, c_first_name, s_store_name;

WITH ssales AS (
  SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, SUM(ss_net_paid_inc_tax) netpaid
  FROM store_sales, store_returns, store, item, customer, customer_address
  WHERE ss_ticket_number = sr_ticket_number
    AND ss_item_sk = sr_item_sk
    AND ss_customer_sk = c_customer_sk
    AND ss_item_sk = i_item_sk
    AND ss_store_sk = s_store_sk
    AND c_current_addr_sk = ca_address_sk
    AND c_birth_country <> UPPER(ca_country)
    AND s_zip = ca_zip
    AND s_market_id = 8
  GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
)
SELECT c_last_name, c_first_name, s_store_name, i_color, i_size, SUM(netpaid) paid
FROM ssales
WHERE i_color = 'lime'
GROUP BY c_last_name, c_first_name, s_store_name, i_color, i_size
HAVING SUM(netpaid) > (SELECT 0.05 * AVG(netpaid) FROM ssales)
ORDER BY c_last_name, c_first_name, s_store_name, i_color, i_size;

WITH ssales AS (
  SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, SUM(ss_net_paid_inc_tax) netpaid
  FROM store_sales, store_returns, store, item, customer, customer_address
  WHERE ss_ticket_number = sr_ticket_number
    AND ss_item_sk = sr_item_sk
    AND ss_customer_sk = c_customer_sk
    AND ss_item_sk = i_item_sk
    AND ss_store_sk = s_store_sk
    AND c_current_addr_sk = ca_address_sk
    AND c_birth_country <> UPPER(ca_country)
    AND s_zip = ca_zip
    AND s_market_id = 8
  GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
)
SELECT c_last_name, c_first_name, s_store_name, SUM(netpaid) paid
FROM ssales
WHERE i_color = 'lime' AND i_size = 'M'  -- Filter for medium size
GROUP BY c_last_name, c_first_name, s_store_name
HAVING SUM(netpaid) > (SELECT 0.05 * AVG(netpaid) FROM ssales)
ORDER BY c_last_name, c_first_name, s_store_name;

WITH ssales AS (
  SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, SUM(ss_net_paid_inc_tax) netpaid
  FROM store_sales
  JOIN store_returns ON ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk
  JOIN store ON ss_store_sk = s_store_sk
  JOIN item ON ss_item_sk = i_item_sk
  JOIN customer ON ss_customer_sk = c_customer_sk
  JOIN customer_address ON c_current_addr_sk = ca_address_sk
  JOIN date_dim ON store_sales.ss_sold_date_sk = date_dim.d_date_sk AND d_year = 2020  -- Joined with date_dim for a specific year
  WHERE c_birth_country <> UPPER(ca_country)
    AND s_zip = ca_zip
    AND s_market_id = 8
  GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
)
SELECT c_last_name, c_first_name, s_store_name, SUM(netpaid) paid
FROM ssales
WHERE i_color = 'lime'
GROUP BY c_last_name, c_first_name, s_store_name
HAVING SUM(netpaid) > (SELECT 0.05 * AVG(netpaid) FROM ssales)
ORDER BY c_last_name, c_first_name, s_store_name;

WITH ssales AS (
  SELECT c_last_name, c_first_name, s_store_name, i_color, i_current_price, i_manager_id, i_units, i_size, SUM(ss_net_paid_inc_tax) netpaid
  FROM store_sales, store_returns, store, item, customer, customer_address
  WHERE ss_ticket_number = sr_ticket_number
    AND ss_item_sk = sr_item_sk
    AND ss_customer_sk = c_customer_sk
    AND ss_item_sk = i_item_sk
    AND ss_store_sk = s_store_sk
    AND c_current_addr_sk = ca_address_sk
    AND c_birth_country <> UPPER(ca_country)
    AND s_zip = ca_zip
    AND s_market_id = 8
  GROUP BY c_last_name, c_first_name, s_store_name, i_color, i_current_price, i_manager_id, i_units, i_size
)
SELECT c_last_name, c_first_name, s_store_name, SUM(netpaid) paid
FROM ssales
WHERE i_color = 'lime'
GROUP BY c_last_name, c_first_name, s_store_name
HAVING SUM(netpaid) > (SELECT 0.05 * AVG(netpaid) FROM ssales)
ORDER BY c_last_name, c_first_name, s_store_name;


WITH ssales AS (
  SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, SUM(ss_net_paid_inc_tax) netpaid
  FROM store_sales, store_returns, store, item, customer, customer_address
  WHERE ss_ticket_number = sr_ticket_number
    AND ss_item_sk = sr_item_sk
    AND ss_customer_sk = c_customer_sk
    AND ss_item_sk = i_item_sk
    AND ss_store_sk = s_store_sk
    AND c_current_addr_sk = ca_address_sk
    AND c_birth_country <> UPPER(ca_country)
    AND s_zip = ca_zip
    AND s_market_id = 8
    AND i_manager_id = 5 
  GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
)
SELECT c_last_name, c_first_name, s_store_name, SUM(netpaid) paid
FROM ssales
WHERE i_color = 'lime'
GROUP BY c_last_name, c_first_name, s_store_name
HAVING SUM(netpaid) > (SELECT 0.05 * AVG(netpaid) FROM ssales)
ORDER BY c_last_name, c_first_name, s_store_name;

WITH ssales AS (
  SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, SUM(ss_net_paid_inc_tax) netpaid
  FROM store_sales, store_returns, store, item, customer, customer_address
  WHERE ss_ticket_number = sr_ticket_number
    AND ss_item_sk = sr_item_sk
    AND ss_customer_sk = c_customer_sk
    AND ss_item_sk = i_item_sk
    AND ss_store_sk = s_store_sk
    AND c_current_addr_sk = ca_address_sk
    AND c_birth_country <> UPPER(ca_country)
    AND s_zip = ca_zip
    AND s_market_id = 8
    AND i_manager_id = 5  -- Filter for a specific manager
  GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
)
SELECT c_last_name, c_first_name, s_store_name, SUM(netpaid) paid
FROM ssales
WHERE i_color = 'lime'
GROUP BY c_last_name, c_first_name, s_store_name
HAVING SUM(netpaid) > (SELECT 0.05 * AVG(netpaid) FROM ssales)
ORDER BY c_last_name, c_first_name, s_store_name;

WITH ssales AS (
  SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, SUM(ss_net_paid_inc_tax) netpaid
  FROM store_sales, store_returns, store, item, customer, customer_address
  WHERE ss_ticket_number = sr_ticket_number
    AND ss_item_sk = sr_item_sk
    AND ss_customer_sk = c_customer_sk
    AND ss_item_sk = i_item_sk
    AND ss_store_sk = s_store_sk
    AND c_current_addr_sk = ca_address_sk
    AND c_birth_country <> UPPER(ca_country)
    AND s_zip = ca_zip
    AND s_market_id = 8
  GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
)
SELECT c_last_name, c_first_name, s_store_name, SUM(netpaid) paid
FROM ssales
WHERE i_color = 'lime'
GROUP BY c_last_name, c_first_name, s_store_name
HAVING SUM(netpaid) > (SELECT 0.05 * AVG(netpaid) FROM ssales)
ORDER BY s_store_name, c_last_name, c_first_name;  -- Changed order priority

WITH ssales AS (
  SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, SUM(ss_net_paid_inc_tax) netpaid
  FROM store_sales, store_returns, store, item, customer, customer_address
  WHERE ss_ticket_number = sr_ticket_number
    AND ss_item_sk = sr_item_sk
    AND ss_customer_sk = c_customer_sk
    AND ss_item_sk = i_item_sk
    AND ss_store_sk = s_store_sk
    AND c_current_addr_sk = ca_address_sk
    AND c_birth_country <> UPPER(ca_country)
    AND s_zip = ca_zip
    AND s_market_id = 8
    AND c_birth_year > 1980  -- Filter for customers born after 1980
  GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
)
SELECT c_last_name, c_first_name, s_store_name, SUM(netpaid) paid
FROM ssales
WHERE i_color = 'lime'
GROUP BY c_last_name, c_first_name, s_store_name
HAVING SUM(netpaid) > (SELECT 0.05 * AVG(netpaid) FROM ssales)
ORDER BY c_last_name, c_first_name, s_store_name;

WITH ssales AS (
  SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, SUM(ss_net_paid_inc_tax) netpaid
  FROM store_sales, store_returns, store, item, customer, customer_address
  WHERE ss_ticket_number = sr_ticket_number
    AND ss_item_sk = sr_item_sk
    AND ss_customer_sk = c_customer_sk
    AND ss_item_sk = i_item_sk
    AND ss_store_sk = s_store_sk
    AND c_current_addr_sk = ca_address_sk
    AND c_birth_country <> UPPER(ca_country)
    AND s_zip = ca_zip
    AND s_market_id = 8
  GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id
)
SELECT c_last_name, c_first_name, s_store_name, SUM(netpaid) paid
FROM ssales
WHERE i_color = 'lime'
GROUP BY c_last_name, c_first_name, s_store_name
HAVING SUM(netpaid) > (SELECT 0.05 * AVG(netpaid) FROM ssales)
ORDER BY c_last_name, c_first_name, s_store_name;

WITH ssales AS (
  SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, SUM(ss_net_paid_inc_tax) netpaid
  FROM store_sales, store_returns, store, item, customer, customer_address
  WHERE ss_ticket_number = sr_ticket_number
    AND ss_item_sk = sr_item_sk
    AND ss_customer_sk = c_customer_sk
    AND ss_item_sk = i_item_sk
    AND ss_store_sk = s_store_sk
    AND c_current_addr_sk = ca_address_sk
    AND c_birth_country <> UPPER(ca_country)
    AND s_zip = ca_zip
    AND s_market_id = 5  
  GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
)
SELECT c_last_name, c_first_name, s_store_name, SUM(netpaid) paid
FROM ssales
WHERE i_color = 'navy' 
GROUP BY c_last_name, c_first_name, s_store_name
HAVING SUM(netpaid) > (SELECT 0.05 * AVG(netpaid) FROM ssales)
ORDER BY c_last_name, c_first_name, s_store_name;

WITH ssales AS (
  SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, SUM(ss_net_paid_inc_tax) netpaid
  FROM store_sales, store_returns, store, item, customer, customer_address
  WHERE ss_ticket_number = sr_ticket_number
    AND ss_item_sk = sr_item_sk
    AND ss_customer_sk = c_customer_sk
    AND ss_item_sk = i_item_sk
    AND ss_store_sk = s_store_sk
    AND c_current_addr_sk = ca_address_sk
    AND c_birth_country <> UPPER(ca_country)
    AND s_zip = ca_zip
    AND s_market_id = 8
  GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
)
SELECT c_last_name, c_first_name, s_store_name, SUM(netpaid) paid
FROM ssales
WHERE i_color = 'cornsilk'
GROUP BY c_last_name, c_first_name, s_store_name
HAVING SUM(netpaid) > (SELECT 0.1 * AVG(netpaid) FROM ssales)
ORDER BY c_last_name, c_first_name, s_store_name;


WITH ssales AS (
  SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, SUM(ss_net_paid_inc_tax) netpaid
  FROM store_sales, store_returns, store, item, customer, customer_address
  WHERE ss_ticket_number = sr_ticket_number
    AND ss_item_sk = sr_item_sk
    AND ss_customer_sk = c_customer_sk
    AND ss_item_sk = i_item_sk
    AND ss_store_sk = s_store_sk
    AND c_current_addr_sk = ca_address_sk
    AND c_birth_country <> UPPER(ca_country)
    AND s_zip = ca_zip
    AND s_market_id = 8
  GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
)
SELECT c_last_name, c_first_name, s_store_name, i_size, SUM(netpaid) paid
FROM ssales
WHERE i_color = 'cornsilk'
GROUP BY c_last_name, c_first_name, s_store_name, i_size
HAVING SUM(netpaid) > (SELECT 0.05 * AVG(netpaid) FROM ssales)
ORDER BY c_last_name, c_first_name, s_store_name, i_size;

WITH ssales AS (
  SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, SUM(ss_net_paid_inc_tax) netpaid
  FROM store_sales, store_returns, store, item, customer, customer_address
  WHERE ss_ticket_number = sr_ticket_number
    AND ss_item_sk = sr_item_sk
    AND ss_customer_sk = c_customer_sk
    AND ss_item_sk = i_item_sk
    AND ss_store_sk = s_store_sk
    AND c_current_addr_sk = ca_address_sk
    AND c_birth_country <> UPPER(ca_country)
    AND s_zip = ca_zip
    AND s_market_id = 8
    AND i_current_price BETWEEN 50 AND 100 
  GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
)
SELECT c_last_name, c_first_name, s_store_name, SUM(netpaid) paid
FROM ssales
WHERE i_color = 'cornsilk'
GROUP BY c_last_name, c_first_name, s_store_name
HAVING SUM(netpaid) > (SELECT 0.05 * AVG(netpaid) FROM ssales)
ORDER BY c_last_name, c_first_name, s_store_name;

WITH ssales AS (
  SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, SUM(ss_net_paid_inc_tax) netpaid
  FROM store_sales, store_returns, store, item, customer, customer_address
  WHERE ss_ticket_number = sr_ticket_number
    AND ss_item_sk = sr_item_sk
    AND ss_customer_sk = c_customer_sk
    AND ss_item_sk = i_item_sk
    AND ss_store_sk = s_store_sk
    AND c_current_addr_sk = ca_address_sk
    AND c_birth_country <> UPPER(ca_country)
    AND s_state = 'TX' 
    AND s_market_id = 8
  GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
)
SELECT c_last_name, c_first_name, s_store_name, SUM(netpaid) paid
FROM ssales
WHERE i_color = 'cornsilk'
GROUP BY c_last_name, c_first_name, s_store_name
HAVING SUM(netpaid) > (SELECT 0.05 * AVG(netpaid) FROM ssales)
ORDER BY c_last_name, c_first_name, s_store_name;

WITH ssales AS (
  SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, SUM(ss_net_paid_inc_tax) netpaid
  FROM store_sales, store_returns, store, item, customer, customer_address
  WHERE ss_ticket_number = sr_ticket_number
    AND ss_item_sk = sr_item_sk
    AND ss_customer_sk = c_customer_sk
    AND ss_item_sk = i_item_sk
    AND ss_store_sk = s_store_sk
    AND c_current_addr_sk = ca_address_sk
    AND c_birth_country <> UPPER(ca_country)
    AND s_zip = ca_zip
    AND s_market_id = 8
    AND ca_state = s_state
  GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
)
SELECT c_last_name, c_first_name, s_store_name, SUM(netpaid) paid
FROM ssales
WHERE i_color = 'cornsilk'
GROUP BY c_last_name, c_first_name, s_store_name
HAVING SUM(netpaid) > (SELECT 0.05 * AVG(netpaid) FROM ssales)
ORDER BY c_last_name, c_first_name, s_store_name;

WITH ssales AS (
  SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, SUM(ss_net_paid_inc_tax) netpaid
  FROM store_sales, store_returns, store, item, customer, customer_address
  WHERE ss_ticket_number = sr_ticket_number
    AND ss_item_sk = sr_item_sk
    AND ss_customer_sk = c_customer_sk
    AND ss_item_sk = i_item_sk
    AND ss_store_sk = s_store_sk
    AND c_current_addr_sk = ca_address_sk
    AND c_birth_country <> UPPER(ca_country)
    AND s_zip = ca_zip
    AND s_market_id = 8
    AND i_manager_id = 10  
  GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
)
SELECT c_last_name, c_first_name, s_store_name, SUM(netpaid) paid
FROM ssales
WHERE i_color = 'cornsilk'
GROUP BY c_last_name, c_first_name, s_store_name
HAVING SUM(netpaid) > (SELECT 0.05 * AVG(netpaid) FROM ssales)
ORDER BY c_last_name, c_first_name, s_store_name;

WITH ssales AS (
  SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, SUM(ss_net_paid_inc_tax) netpaid
  FROM store_sales, store_returns, store, item, customer, customer_address
  WHERE ss_ticket_number = sr_ticket_number
    AND ss_item_sk = sr_item_sk
    AND ss_customer_sk = c_customer_sk
    AND ss_item_sk = i_item_sk
    AND ss_store_sk = s_store_sk
    AND c_current_addr_sk = ca_address_sk
    AND c_birth_country <> UPPER(ca_country)
    AND s_zip = ca_zip
    AND s_market_id = 8
  GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
)
SELECT c_last_name, c_first_name, s_store_name, SUM(netpaid) paid
FROM ssales
WHERE i_color = 'cornsilk'
GROUP BY c_last_name, c_first_name, s_store_name
HAVING SUM(netpaid) > (SELECT 0.05 * AVG(netpaid) FROM ssales)
ORDER BY SUM(netpaid) DESC;  

WITH ssales AS (
  SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, SUM(ss_net_paid_inc_tax) netpaid
  FROM store_sales, store_returns, store, item, customer, customer_address
  WHERE ss_ticket_number = sr_ticket_number
    AND ss_item_sk = sr_item_sk
    AND ss_customer_sk = c_customer_sk
    AND ss_item_sk = i_item_sk
    AND ss_store_sk = s_store_sk
    AND c_current_addr_sk = ca_address_sk
    AND c_birth_country <> UPPER(ca_country)
    AND s_zip = ca_zip
    AND s_market_id = 8
  GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
)
SELECT c_last_name, c_first_name, s_store_name, SUM(netpaid) paid
FROM ssales
WHERE i_color = 'cornsilk' OR i_color = 'azure' 
GROUP BY c_last_name, c_first_name, s_store_name
HAVING SUM(netpaid) > (SELECT 0.05 * AVG(netpaid) FROM ssales)
ORDER BY c_last_name, c_first_name, s_store_name;

WITH ssales AS (
  SELECT c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size, SUM(ss_net_paid_inc_tax) netpaid
  FROM store_sales, store_returns, store, item, customer, customer_address
  WHERE ss_ticket_number = sr_ticket_number
    AND ss_item_sk = sr_item_sk
    AND ss_customer_sk = c_customer_sk
    AND ss_item_sk = i_item_sk
    AND ss_store_sk = s_store_sk
    AND c_current_addr_sk = ca_address_sk
    AND c_birth_country <> 'USA' 
    AND s_zip = ca_zip
    AND s_market_id = 8
  GROUP BY c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size
)
SELECT c_last_name, c_first_name, s_store_name, SUM(netpaid) paid
FROM ssales
WHERE i_color = 'cornsilk'
GROUP BY c_last_name, c_first_name, s_store_name
HAVING SUM(netpaid) > (SELECT 0.05 * AVG(netpaid) FROM ssales)
ORDER BY c_last_name, c_first_name, s_store_name;

SELECT * FROM (
  SELECT i_manufact_id,
    SUM(ss_sales_price) sum_sales,
    AVG(SUM(ss_sales_price)) OVER (PARTITION BY i_manufact_id) avg_quarterly_sales
  FROM item, store_sales, date_dim, store
  WHERE ss_item_sk = i_item_sk AND
    ss_sold_date_sk = d_date_sk AND
    ss_store_sk = s_store_sk AND
    d_month_seq IN (1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212)
    AND ((i_category IN ('Books','Children','Electronics') AND
    i_class IN ('personal','portable','reference','self-help') AND
    i_brand IN ('scholaramalgamalg #14','scholaramalgamalg #7',
    'exportiunivamalg #9','scholaramalgamalg #9'))
    OR (i_category IN ('Women','Music','Men') AND
    i_class IN ('accessories','classical','fragrances','pants') AND
    i_brand IN ('amalgimporto #1','edu packscholar #1','exportiimporto #1',
    'importoamalg #1')))
  GROUP BY i_manufact_id, d_qoy
) tmp1
WHERE CASE WHEN avg_quarterly_sales > 0
  THEN ABS(sum_sales - avg_quarterly_sales) / avg_quarterly_sales
  ELSE NULL END > 0.1
ORDER BY avg_quarterly_sales, sum_sales, i_manufact_id
LIMIT 100;

SELECT * FROM (
  SELECT i_manufact_id,
    SUM(ss_sales_price) sum_sales,
    AVG(SUM(ss_sales_price)) OVER (PARTITION BY i_manufact_id) avg_quarterly_sales
  FROM item, store_sales, date_dim, store
  WHERE ss_item_sk = i_item_sk AND
    ss_sold_date_sk = d_date_sk AND
    ss_store_sk = s_store_sk AND
    d_month_seq IN (1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224)
    AND ((i_category IN ('Books','Electronics') AND  
    i_class IN ('portable','reference') AND  
    i_brand IN ('scholaramalgamalg #14','exportiunivamalg #9'))
    OR (i_category IN ('Women','Men') AND 
    i_class IN ('accessories','fragrances') AND  
    i_brand IN ('amalgimporto #1','edu packscholar #1')))
  GROUP BY i_manufact_id, d_qoy
) tmp1
WHERE CASE WHEN avg_quarterly_sales > 0
  THEN ABS(sum_sales - avg_quarterly_sales) / avg_quarterly_sales
  ELSE NULL END > 0.1
ORDER BY avg_quarterly_sales, sum_sales, i_manufact_id
LIMIT 100;

SELECT * FROM (
  SELECT i_manufact_id,
    SUM(ss_sales_price) sum_sales,
    AVG(SUM(ss_sales_price)) OVER (PARTITION BY i_manufact_id) avg_quarterly_sales
  FROM item, store_sales, date_dim, store
  WHERE ss_item_sk = i_item_sk AND
    ss_sold_date_sk = d_date_sk AND
    ss_store_sk = s_store_sk AND
    d_month_seq IN (1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224)
    AND ((i_category IN ('Books','Children','Electronics') AND
    i_class IN ('personal','portable','reference','self-help') AND
    i_brand IN ('scholaramalgamalg #14','scholaramalgamalg #7',
    'exportiunivamalg #9','scholaramalgamalg #9'))
    OR (i_category IN ('Women','Music','Men') AND
    i_class IN ('accessories','classical','fragrances','pants') AND
    i_brand IN ('amalgimporto #1','edu packscholar #1','exportiimporto #1',
    'importoamalg #1')))
  GROUP BY i_manufact_id, d_qoy
) tmp1
WHERE CASE WHEN avg_quarterly_sales > 0
  THEN ABS(sum_sales - avg_quarterly_sales) / avg_quarterly_sales
  ELSE NULL END < 0.1  
ORDER BY avg_quarterly_sales, sum_sales, i_manufact_id
LIMIT 100;

SELECT * FROM (
  SELECT i_manufact_id,
    SUM(ss_sales_price) sum_sales,
    AVG(SUM(ss_sales_price)) OVER (PARTITION BY i_manufact_id) avg_quarterly_sales
  FROM item, store_sales, date_dim, store
  WHERE ss_item_sk = i_item_sk AND
    ss_sold_date_sk = d_date_sk AND
    ss_store_sk = s_store_sk AND
    d_month_seq IN (1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224)
    AND ((i_category IN ('Books','Children','Electronics') AND
    i_class IN ('personal','portable','reference','self-help') AND
    i_brand IN ('scholaramalgamalg #14','scholaramalgamalg #7',
    'exportiunivamalg #9','scholaramalgamalg #9'))
    OR (i_category IN ('Women','Music','Men') AND
    i_class IN ('accessories','classical','fragrances','pants') AND
    i_brand IN ('amalgimporto #1','edu packscholar #1','exportiimporto #1',
    'importoamalg #1')))
  GROUP BY i_manufact_id, d_qoy
) tmp1
WHERE CASE WHEN avg_quarterly_sales > 0
  THEN ABS(sum_sales - avg_quarterly_sales) / avg_quarterly_sales
  ELSE NULL END > 0.1
ORDER BY avg_quarterly_sales, sum_sales, i_manufact_id
LIMIT 50;  -- Adjusted limit

SELECT * FROM (
  SELECT i_manufact_id,
    SUM(ss_sales_price) sum_sales,
    AVG(SUM(ss_sales_price)) OVER (PARTITION BY i_manufact_id) avg_quarterly_sales
  FROM item, store_sales, date_dim, store
  WHERE ss_item_sk = i_item_sk AND
    ss_sold_date_sk = d_date_sk AND
    ss_store_sk = s_store_sk AND
    d_month_seq IN (1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224)
    AND ((i_category IN ('Books','Children','Electronics') AND
    i_class IN ('personal','portable','reference','self-help') AND
    i_brand NOT IN ('scholaramalgamalg #14'))  
    OR (i_category IN ('Women','Music','Men') AND
    i_class IN ('accessories','classical','fragrances','pants') AND
    i_brand NOT IN ('edu packscholar #1'))) 
  GROUP BY i_manufact_id, d_qoy
) tmp1
WHERE CASE WHEN avg_quarterly_sales > 0
  THEN ABS(sum_sales - avg_quarterly_sales) / avg_quarterly_sales
  ELSE NULL END > 0.1
ORDER BY avg_quarterly_sales, sum_sales, i_manufact_id
LIMIT 100;

SELECT * FROM (
  SELECT i_manufact_id,
    AVG(ss_sales_price) avg_sales,
    AVG(AVG(ss_sales_price)) OVER (PARTITION BY i_manufact_id) avg_quarterly_sales
  FROM item, store_sales, date_dim, store
  WHERE ss_item_sk = i_item_sk AND
    ss_sold_date_sk = d_date_sk AND
    ss_store_sk = s_store_sk AND
    d_month_seq IN (1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224)
    AND ((i_category IN ('Books','Children','Electronics') AND
    i_class IN ('personal','portable','reference','self-help') AND
    i_brand IN ('scholaramalgamalg #14','scholaramalgamalg #7',
    'exportiunivamalg #9','scholaramalgamalg #9'))
    OR (i_category IN ('Women','Music','Men') AND
    i_class IN ('accessories','classical','fragrances','pants') AND
    i_brand IN ('amalgimporto #1','edu packscholar #1','exportiimporto #1',
    'importoamalg #1')))
  GROUP BY i_manufact_id, d_qoy
) tmp1
WHERE CASE WHEN avg_quarterly_sales > 0
  THEN ABS(avg_sales - avg_quarterly_sales) / avg_quarterly_sales
  ELSE NULL END > 0.1
ORDER BY avg_quarterly_sales, avg_sales, i_manufact_id
LIMIT 100;

SELECT * FROM (
  SELECT i_manufact_id,
    SUM(ss_sales_price) sum_sales,
    AVG(SUM(ss_sales_price)) OVER (PARTITION BY i_manufact_id) avg_quarterly_sales
  FROM item, store_sales, date_dim, store
  WHERE ss_item_sk = i_item_sk AND
    ss_sold_date_sk = d_date_sk AND
    ss_store_sk = s_store_sk AND
    d_month_seq IN (1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224)
    AND ((i_category IN ('Books','Children','Electronics', 'Home & Garden') AND  
    i_class IN ('personal','portable','reference','self-help', 'gardening') AND
    i_brand IN ('scholaramalgamalg #14','scholaramalgamalg #7',
    'exportiunivamalg #9','scholaramalgamalg #9'))
    OR (i_category IN ('Women','Music','Men', 'Sports') AND  
    i_class IN ('accessories','classical','fragrances','pants', 'athletic') AND 
    i_brand IN ('amalgimporto #1','edu packscholar #1','exportiimporto #1',
    'importoamalg #1')))
  GROUP BY i_manufact_id, d_qoy
) tmp1
WHERE CASE WHEN avg_quarterly_sales > 0
  THEN ABS(sum_sales - avg_quarterly_sales) / avg_quarterly_sales
  ELSE NULL END > 0.1
ORDER BY avg_quarterly_sales, sum_sales, i_manufact_id
LIMIT 100;

SELECT * FROM (
  SELECT i_manufact_id,
    SUM(ss_sales_price) sum_sales,
    AVG(SUM(ss_sales_price)) OVER (PARTITION BY i_manufact_id) avg_quarterly_sales
  FROM item, store_sales, date_dim, store
  WHERE ss_item_sk = i_item_sk AND
    ss_sold_date_sk = d_date_sk AND
    ss_store_sk = s_store_sk AND
    d_month_seq IN (1213,1214,1215)  
    AND ((i_category IN ('Books','Children','Electronics') AND
    i_class IN ('personal','portable','reference','self-help') AND
    i_brand IN ('scholaramalgamalg #14','scholaramalgamalg #7',
    'exportiunivamalg #9','scholaramalgamalg #9'))
    OR (i_category IN ('Women','Music','Men') AND
    i_class IN ('accessories','classical','fragrances','pants') AND
    i_brand IN ('amalgimporto #1','edu packscholar #1','exportiimporto #1',
    'importoamalg #1')))
  GROUP BY i_manufact_id, d_qoy
) tmp1
WHERE CASE WHEN avg_quarterly_sales > 0
  THEN ABS(sum_sales - avg_quarterly_sales) / avg_quarterly_sales
  ELSE NULL END > 0.1
ORDER BY avg_quarterly_sales, sum_sales, i_manufact_id
LIMIT 100;

SELECT * FROM (
  SELECT i_manufact_id,
    SUM(ss_sales_price) sum_sales,
    AVG(SUM(ss_sales_price)) OVER (PARTITION BY i_manufact_id) avg_quarterly_sales
  FROM item, store_sales, date_dim, store
  WHERE ss_item_sk = i_item_sk AND
    ss_sold_date_sk = d_date_sk AND
    ss_store_sk = s_store_sk AND
    d_month_seq IN (1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224)
    AND ((i_category IN ('Books','Children','Electronics') AND
    i_class IN ('personal','portable','reference','self-help') AND
    i_brand IN ('scholaramalgamalg #14','scholaramalgamalg #7',
    'exportiunivamalg #9','scholaramalgamalg #9'))
    OR (i_category IN ('Women','Music','Men') AND
    i_class IN ('accessories','classical','fragrances','pants') AND
    i_brand IN ('amalgimporto #1','edu packscholar #1','exportiimporto #1',
    'importoamalg #1')))
  GROUP BY i_manufact_id, d_qoy
) tmp1
WHERE CASE WHEN avg_quarterly_sales > 0
  THEN ABS(sum_sales - avg_quarterly_sales) / avg_quarterly_sales
  ELSE NULL END > 0.1
ORDER BY i_manufact_id, avg_quarterly_sales, sum_sales 
LIMIT 100;

SELECT * FROM (
  SELECT i_manufact_id,
    SUM(ss_sales_price) sum_sales,
    AVG(SUM(ss_sales_price)) OVER (PARTITION BY i_manufact_id) avg_quarterly_sales
  FROM item, store_sales, date_dim, store
  WHERE ss_item_sk = i_item_sk AND
    ss_sold_date_sk = d_date_sk AND
    ss_store_sk = s_store_sk AND
    d_month_seq IN (1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224)
    AND ((i_category IN ('Books','Children','Electronics', 'Toys', 'Fashion') AND  
    i_class IN ('personal','portable','reference','self-help') AND
    i_brand IN ('brand #1', 'brand #2')) 
    OR (i_category IN ('Women','Music','Men', 'Sports', 'Outdoor') AND 
    i_class IN ('accessories','classical','fragrances','pants') AND
    i_brand IN ('brand #3', 'brand #4'))) 
  GROUP BY i_manufact_id, d_qoy
) tmp1
WHERE CASE WHEN avg_quarterly_sales > 0
  THEN ABS(sum_sales - avg_quarterly_sales) / avg_quarterly_sales
  ELSE NULL END > 0.1
ORDER BY avg_quarterly_sales, sum_sales, i_manufact_id
LIMIT 100;

SELECT i_brand_id brand_id, i_brand brand,
  SUM(ss_ext_sales_price) ext_price
FROM date_dim, store_sales, item
WHERE d_date_sk = ss_sold_date_sk
  AND ss_item_sk = i_item_sk
  AND i_manager_id = 85  
  AND d_moy = 11  
  AND d_year = 2003 
GROUP BY i_brand, i_brand_id
ORDER BY ext_price DESC, i_brand_id
LIMIT 100;

SELECT i_brand_id brand_id, i_brand brand,
  SUM(ss_ext_sales_price) ext_price
FROM date_dim, store_sales, item
WHERE d_date_sk = ss_sold_date_sk
  AND ss_item_sk = i_item_sk
  AND i_manager_id = 96
  AND d_moy = 6 
  AND d_year = 2002
  AND d_day_of_week = 'Monday' 
GROUP BY i_brand, i_brand_id
ORDER BY ext_price DESC, i_brand_id
LIMIT 100;

SELECT i_category category, 
  SUM(ss_ext_sales_price) ext_price
FROM date_dim, store_sales, item
WHERE d_date_sk = ss_sold_date_sk
  AND ss_item_sk = i_item_sk
  AND i_manager_id = 96
  AND d_moy = 12
  AND d_year = 2002
GROUP BY i_category
ORDER BY ext_price DESC
LIMIT 100;

SELECT i_brand_id brand_id, i_brand brand,
  SUM(ss_ext_sales_price) ext_price
FROM date_dim, store_sales, item
WHERE d_date_sk = ss_sold_date_sk
  AND ss_item_sk = i_item_sk
  AND i_manager_id = 96
  AND d_moy = 12
  AND d_year = 2002
GROUP BY i_brand, i_brand_id
ORDER BY i_brand, ext_price DESC
LIMIT 100;

SELECT i_brand_id brand_id, i_brand brand,
  SUM(ss_ext_sales_price) ext_price
FROM date_dim, store_sales, item
WHERE d_date_sk = ss_sold_date_sk
  AND ss_item_sk = i_item_sk
  AND i_manager_id = 96
  AND d_moy = 12
  AND d_year = 2002
GROUP BY i_brand, i_brand_id
ORDER BY ext_price DESC, i_brand_id
LIMIT 50;

SELECT i_brand_id brand_id, i_brand brand,
  SUM(ss_ext_sales_price) ext_price
FROM date_dim, store_sales, item
WHERE d_date_sk = ss_sold_date_sk
  AND ss_item_sk = i_item_sk
  AND i_manager_id = 96
  AND d_moy = 12
  AND d_year = 2002
  AND i_color = 'red' 
GROUP BY i_brand, i_brand_id
ORDER BY ext_price DESC, i_brand_id
LIMIT 100;

SELECT i_brand_id brand_id, i_brand brand,
  SUM(ss_ext_sales_price) ext_price
FROM date_dim, store_sales, item
WHERE d_date_sk = ss_sold_date_sk
  AND ss_item_sk = i_item_sk
  AND i_manager_id = 96
  AND d_moy = 12
  AND d_year BETWEEN 2000 AND 2002 
GROUP BY i_brand, i_brand_id
ORDER BY ext_price DESC, i_brand_id
LIMIT 100;

SELECT i_brand_id brand_id, i_brand brand,
  SUM(ss_ext_sales_price) ext_price
FROM date_dim, store_sales, item
WHERE d_date_sk = ss_sold_date_sk
  AND ss_item_sk = i_item_sk
  AND i_manager_id = 96
  AND d_moy = 12
  AND d_year = 2002
  AND i_brand NOT IN ('Brand#123', 'Brand#456') 
GROUP BY i_brand, i_brand_id
ORDER BY ext_price DESC, i_brand_id
LIMIT 100;

SELECT i_brand_id brand_id, i_brand brand,
  SUM(ss_ext_sales_price) ext_price
FROM date_dim, store_sales, item
WHERE d_date_sk = ss_sold_date_sk
  AND ss_item_sk = i_item_sk
  AND i_manager_id = 96
  AND d_moy = 12
  AND d_year = 2002
  AND i_class = 'luxury'
GROUP BY i_brand, i_brand_id
ORDER BY ext_price DESC, i_brand_id
LIMIT 100;

SELECT i_brand_id brand_id, i_brand brand,
  SUM(ss_ext_sales_price) ext_price
FROM date_dim, store_sales, item
WHERE d_date_sk = ss_sold_date_sk
  AND ss_item_sk = i_item_sk
  AND i_manager_id = 88 
  AND d_moy = 12
  AND d_year = 2002
  AND i_category = 'Electronics' 
GROUP BY i_brand, i_brand_id
ORDER BY ext_price DESC, i_brand_id
LIMIT 100;

WITH customer_total_return AS (
  SELECT wr_returning_customer_sk AS ctr_customer_sk,
  ca_state AS ctr_state,
  SUM(wr_return_amt) AS ctr_total_return
  FROM web_returns, date_dim, customer_address
  WHERE wr_returned_date_sk = d_date_sk
  AND d_year = 2002 
  AND wr_returning_addr_sk = ca_address_sk
  GROUP BY wr_returning_customer_sk, ca_state
)
SELECT c_customer_id, c_salutation, c_first_name, c_last_name, c_preferred_cust_flag,
  c_birth_day, c_birth_month, c_birth_year, c_birth_country, c_login, c_email_address,
  c_last_review_date, ctr_total_return
FROM customer_total_return ctr1, customer_address, customer
WHERE ctr1.ctr_total_return > (SELECT AVG(ctr_total_return)*1.2
  FROM customer_total_return ctr2
  WHERE ctr1.ctr_state = ctr2.ctr_state)
  AND ca_address_sk = c_current_addr_sk
  AND ca_state = 'CA'  
  AND ctr1.ctr_customer_sk = c_customer_sk
ORDER BY c_customer_id, c_salutation, c_first_name, c_last_name, c_preferred_cust_flag,
  c_birth_day, c_birth_month, c_birth_year, c_birth_country, c_login, c_email_address,
  c_last_review_date, ctr_total_return
LIMIT 100;

WITH customer_total_return AS (
  SELECT wr_returning_customer_sk AS ctr_customer_sk,
  ca_state AS ctr_state,
  SUM(wr_return_amt) AS ctr_total_return
  FROM web_returns, date_dim, customer_address
  WHERE wr_returned_date_sk = d_date_sk
  AND d_year = 2001
  AND wr_returning_addr_sk = ca_address_sk
  GROUP BY wr_returning_customer_sk, ca_state
)
SELECT c_customer_id, c_salutation, c_first_name, c_last_name, c_preferred_cust_flag,
  c_birth_day, c_birth_month, c_birth_year, c_birth_country, c_login, c_email_address,
  c_last_review_date, ctr_total_return
FROM customer_total_return ctr1, customer_address, customer
WHERE ctr1.ctr_total_return > (SELECT AVG(ctr_total_return)*1.5 
  FROM customer_total_return ctr2
  WHERE ctr1.ctr_state = ctr2.ctr_state)
  AND ca_address_sk = c_current_addr_sk
  AND ca_state = 'MI'
  AND ctr1.ctr_customer_sk = c_customer_sk
ORDER BY c_customer_id, c_salutation, c_first_name, c_last_name, c_preferred_cust_flag,
  c_birth_day, c_birth_month, c_birth_year, c_birth_country, c_login, c_email_address,
  c_last_review_date, ctr_total_return
LIMIT 100;

WITH customer_total_return AS (
  SELECT wr_returning_customer_sk AS ctr_customer_sk,
  ca_state AS ctr_state,
  SUM(wr_return_amt) AS ctr_total_return
  FROM web_returns, date_dim, customer_address
  WHERE wr_returned_date_sk = d_date_sk
  AND d_year = 2001
  AND wr_returning_addr_sk = ca_address_sk
  GROUP BY wr_returning_customer_sk, ca_state
)
SELECT c_customer_id, c_salutation, c_first_name, c_last_name, c_preferred_cust_flag,
  c_birth_day, c_birth_month, c_birth_year, c_birth_country, c_login, c_email_address,
  c_last_review_date, ctr_total_return
FROM customer_total_return ctr1, customer_address, customer
WHERE ctr1.ctr_total_return > (SELECT AVG(ctr_total_return)*1.2
  FROM customer_total_return ctr2
  WHERE ctr1.ctr_state = ctr2.ctr_state)
  AND ca_address_sk = c_current_addr_sk
  AND ca_state IN ('TX', 'CA', 'NY')  
  AND ctr1.ctr_customer_sk = c_customer_sk
ORDER BY c_customer_id, c_salutation, c_first_name, c_last_name, c_preferred_cust_flag,
  c_birth_day, c_birth_month, c_birth_year, c_birth_country, c_login, c_email_address,
  c_last_review_date, ctr_total_return
LIMIT 100;

WITH customer_total_return AS (
  SELECT wr_returning_customer_sk AS ctr_customer_sk,
  ca_state AS ctr_state,
  SUM(wr_return_amt) AS ctr_total_return
  FROM web_returns, date_dim, customer_address
  WHERE wr_returned_date_sk = d_date_sk
  AND d_year = 2001
  AND wr_returning_addr_sk = ca_address_sk
  GROUP BY wr_returning_customer_sk, ca_state
)
SELECT c_customer_id, c_salutation, c_first_name, c_last_name, c_preferred_cust_flag,
  c_birth_day, c_birth_month, c_birth_year, c_birth_country, c_login, c_email_address,
  c_last_review_date, ctr_total_return
FROM customer_total_return ctr1, customer_address, customer
WHERE ctr1.ctr_total_return > (SELECT AVG(ctr_total_return)*1.2
  FROM customer_total_return ctr2
  WHERE ctr1.ctr_state = ctr2.ctr_state)
  AND ca_address_sk = c_current_addr_sk
  AND ca_state = 'MI'
  AND ctr1.ctr_customer_sk = c_customer_sk
ORDER BY ctr_total_return DESC  
LIMIT 50; 

WITH customer_total_return AS (
  SELECT wr_returning_customer_sk AS ctr_customer_sk,
  ca_state AS ctr_state,
  SUM(wr_return_amt) AS ctr_total_return
  FROM web_returns, date_dim, customer_address
  WHERE wr_returned_date_sk = d_date_sk
  AND d_year = 2001
  AND wr_returning_addr_sk = ca_address_sk
  GROUP BY wr_returning_customer_sk, ca_state
)
SELECT c_customer_id, c_salutation, c_first_name, c_last_name, c_preferred_cust_flag,
  c_birth_day, c_birth_month, c_birth_year, c_birth_country, c_login, c_email_address,
  c_last_review_date, ctr_total_return
FROM customer_total_return ctr1, customer_address, customer
WHERE ctr1.ctr_total_return < (SELECT AVG(ctr_total_return)*0.8  
  FROM customer_total_return ctr2
  WHERE ctr1.ctr_state = ctr2.ctr_state)
  AND ca_address_sk = c_current_addr_sk
  AND ca_state = 'MI'
  AND ctr1.ctr_customer_sk = c_customer_sk
ORDER BY c_customer_id, c_salutation, c_first_name, c_last_name, c_preferred_cust_flag,
  c_birth_day, c_birth_month, c_birth_year, c_birth_country, c_login, c_email_address,
  c_last_review_date, ctr_total_return
LIMIT 100;

WITH customer_total_return AS (
  SELECT wr_returning_customer_sk AS ctr_customer_sk,
  ca_state AS ctr_state,
  SUM(wr_return_amt) AS ctr_total_return
  FROM web_returns, date_dim, customer_address
  WHERE wr_returned_date_sk = d_date_sk
  AND d_year = 2001
  AND wr_returning_addr_sk = ca_address_sk
  GROUP BY wr_returning_customer_sk, ca_state
)
SELECT c_customer_id, c_salutation, c_first_name, c_last_name, c_preferred_cust_flag,
  c_birth_day, c_birth_month, c_birth_year, c_birth_country, c_login, c_email_address,
  c_last_review_date, ctr_total_return
FROM customer_total_return ctr1, customer_address, customer
WHERE ctr1.ctr_total_return > (SELECT AVG(ctr_total_return)*1.2
  FROM customer_total_return ctr2
  WHERE ctr1.ctr_state = ctr2.ctr_state)
  AND ca_address_sk = c_current_addr_sk
  AND ca_state = 'MI'
  AND ctr1.ctr_customer_sk = c_customer_sk
  AND c_birth_year <> 1980 
ORDER BY c_customer_id, c_salutation, c_first_name, c_last_name, c_preferred_cust_flag,
  c_birth_day, c_birth_month, c_birth_year, c_birth_country, c_login, c_email_address,
  c_last_review_date, ctr_total_return
LIMIT 100;

WITH customer_total_return AS (
  SELECT wr_returning_customer_sk AS ctr_customer_sk,
  ca_state AS ctr_state,
  SUM(wr_return_amt) AS ctr_total_return
  FROM web_returns, date_dim, customer_address
  WHERE wr_returned_date_sk = d_date_sk
  AND d_year = 2001
  AND wr_returning_addr_sk = ca_address_sk
  GROUP BY wr_returning_customer_sk, ca_state
)
SELECT c_customer_id, c_salutation, c_first_name, c_last_name, c_preferred_cust_flag,
  c_birth_day, c_birth_month, c_birth_year, c_birth_country, c_login, c_email_address,
  c_last_review_date, ctr_total_return
FROM customer_total_return ctr1, customer_address, customer
WHERE ctr1.ctr_total_return > (SELECT AVG(ctr_total_return)*1.2
  FROM customer_total_return ctr2
  WHERE ctr1.ctr_state = ctr2.ctr_state)
  AND ca_address_sk = c_current_addr_sk
  AND ca_state = 'MI'
  AND ctr1.ctr_customer_sk = c_customer_sk
ORDER BY ctr_total_return ASC, c_customer_id 
LIMIT 100;

WITH customer_total_return AS (
  SELECT wr_returning_customer_sk AS ctr_customer_sk,
  ca_state AS ctr_state,
  SUM(wr_return_amt) AS ctr_total_return
  FROM web_returns, date_dim, customer_address
  WHERE wr_returned_date_sk = d_date_sk
  AND d_year = 2001
  AND wr_returning_addr_sk = ca_address_sk
  GROUP BY wr_returning_customer_sk, ca_state
)
SELECT c_customer_id, c_salutation, c_first_name, c_last_name, c_preferred_cust_flag,
  c_birth_day, c_birth_month, c_birth_year, c_birth_country, c_login, c_email_address,
  c_last_review_date, ctr_total_return
FROM customer_total_return ctr1, customer_address, customer
WHERE ctr1.ctr_total_return > (SELECT AVG(ctr_total_return)*1.2
  FROM customer_total_return ctr2
  WHERE ctr1.ctr_state = ctr2.ctr_state)
  AND ca_address_sk = c_current_addr_sk
  AND ca_state = 'MI'
  AND ctr1.ctr_customer_sk = c_customer_sk
  AND c_preferred_cust_flag = 'Y' 
ORDER BY c_customer_id, c_salutation, c_first_name, c_last_name, c_preferred_cust_flag,
  c_birth_day, c_birth_month, c_birth_year, c_birth_country, c_login, c_email_address,
  c_last_review_date, ctr_total_return
LIMIT 100;

WITH customer_total_return AS (
  SELECT wr_returning_customer_sk AS ctr_customer_sk,
  ca_state AS ctr_state,
  SUM(wr_return_amt) AS ctr_total_return
  FROM web_returns, date_dim, customer_address
  WHERE wr_returned_date_sk = d_date_sk
  AND d_year = 2001
  AND wr_returning_addr_sk = ca_address_sk
  GROUP BY wr_returning_customer_sk, ca_state
)
SELECT c_customer_id, c_salutation, c_first_name, c_last_name, c_preferred_cust_flag,
  c_birth_day, c_birth_month, c_birth_year, c_birth_country, c_login, c_email_address,
  c_last_review_date, ctr_total_return
FROM customer_total_return ctr1, customer_address, customer
WHERE ctr1.ctr_total_return > (SELECT AVG(ctr_total_return)*1.2
  FROM customer_total_return ctr2
  WHERE ctr1.ctr_state = ctr2.ctr_state)
  AND ca_address_sk = c_current_addr_sk
  AND ca_state = 'MI'
  AND ctr1.ctr_customer_sk = c_customer_sk
ORDER BY c_customer_id, c_salutation, c_first_name, c_last_name, c_preferred_cust_flag,
  c_birth_day, c_birth_month, c_birth_year, c_birth_country, c_login, c_email_address,
  c_last_review_date, ctr_total_return
LIMIT 200;  

WITH customer_total_return AS (
  SELECT wr_returning_customer_sk AS ctr_customer_sk,
  ca_state AS ctr_state,
  SUM(wr_return_amt) AS ctr_total_return
  FROM web_returns, date_dim, customer_address
  WHERE wr_returned_date_sk = d_date_sk
  AND d_year = 2003 
  AND wr_returning_addr_sk = ca_address_sk
  GROUP BY wr_returning_customer_sk, ca_state
)
SELECT c_customer_id, c_salutation, c_first_name, c_last_name, c_preferred_cust_flag,
  c_birth_day, c_birth_month, c_birth_year, c_birth_country, c_login, c_email_address,
  c_last_review_date, ctr_total_return
FROM customer_total_return ctr1, customer_address, customer
WHERE ctr1.ctr_total_return > (SELECT AVG(ctr_total_return)*1.2
  FROM customer_total_return ctr2
  WHERE ctr1.ctr_state = ctr2.ctr_state)
  AND ca_address_sk = c_current_addr_sk
  AND ca_state NOT IN ('MI', 'CA') 
  AND ctr1.ctr_customer_sk = c_customer_sk
ORDER BY c_customer_id, c_salutation, c_first_name, c_last_name, c_preferred_cust_flag,
  c_birth_day, c_birth_month, c_birth_year, c_birth_country, c_login, c_email_address,
  c_last_review_date, ctr_total_return
LIMIT 100;


